#include <iostream>
#include <deque> 
using namespace std;

int max_element(const deque<int>& pipe, int max){
    if(max < pipe.back()) max = pipe.back();
    return max;
}

int find_max(const deque<int>& pipe){
    int max = 0;
    for(auto x:pipe){
        if(max < x) max = x;
    }
    return max;
}

void printKMax(int arr[], int n, int k){
	//Write your code here.
    deque<int> pipe;
    int max=0;
    for(int i=0; i<n; i++){

        if(i < k) pipe.push_back(arr[i]);
        else{
            if(i==k) max = find_max(pipe);
            
            max = max_element(pipe, max);
            cout<<max<<" ";
            pipe.push_back(arr[i]);
            if(pipe[0] == max){
                pipe.pop_front();
                max = find_max(pipe);
            }else pipe.pop_front();
        }    
    }
    cout<<max_element(pipe, max)<<" ";
    cout<<endl;
}

int main(){
  
	int t;
	cin >> t;
	while(t>0) {
		int n,k;
    	cin >> n >> k;
    	int i;
    	int arr[n];
    	for(i=0;i<n;i++)
      		cin >> arr[i];
    	printKMax(arr, n, k);
    	t--;
  	}
  	return 0;
}
